#include <iostream>

class ComplexNumber {
private:
    double real;
    double imag;

public:
    // Конструктор за замовчуванням
    ComplexNumber() : real(0.0), imag(0.0) {}

    // Конструктор з параметрами
    ComplexNumber(double realPart, double imagPart) : real(realPart), imag(imagPart) {}

    // Конструктор копіювання
    ComplexNumber(const ComplexNumber& other) : real(other.real), imag(other.imag) {}

    // Операція додавання
    ComplexNumber operator+(const ComplexNumber& other) const {
        return ComplexNumber(real + other.real, imag + other.imag);
    }

    // Операція віднімання
    ComplexNumber operator-(const ComplexNumber& other) const {
        return ComplexNumber(real - other.real, imag - other.imag);
    }

    // Операція виводу
    friend std::ostream& operator<<(std::ostream& os, const ComplexNumber& complex) {
        os << complex.real;
        if (complex.imag >= 0) {
            os << " + " << complex.imag << "i";
        } else {
            os << " - " << -complex.imag << "i";
        }
        return os;
    }
};

int main() {
    // Приклад використання
    ComplexNumber c1(2.0, 3.0);
    ComplexNumber c2(1.5, 2.5);

    // Операції додавання та віднімання
    ComplexNumber resultAdd = c1 + c2;
    ComplexNumber resultSubtract = c1 - c2;

    // Виведення результатів
    std::cout << "c1 + c2 = " << resultAdd << std::endl;
    std::cout << "c1 - c2 = " << resultSubtract << std::endl;

    return 0;
}
